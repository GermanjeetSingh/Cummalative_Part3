@model IEnumerable<Teacher>
@{
    ViewData["Title"] = "View Teachers";
}

<div class="text-center">
    <h1 class="display-4">All Teachers</h1>
    <div class="text-right" style="margin-bottom:1em">
        <button class="btn btn-primary" onclick="location.href='@Url.Action("Add","Teacher")'">
            Add Teacher
        </button>
    </div>
    <table class="table table-striped">
        <thead>
            <tr>
                <th scope="col">Teacher Id</th>
                <th scope="col">First Name</th>
                <th scope="col">Last Name</th>
                <th scope="col">Employee Id</th>
                <th scope="col">Hire Date</th>
                <th scope="col">Salary</th>
                <th scope="col">View</th>
                <th scope="col">Delete</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var teacher in Model)
            {
                <tr>
                    <th scope="row">@Html.DisplayFor(item => teacher.teacherid)</th>
                    <th>@Html.DisplayFor(item => teacher.teacherfname)</th>
                    <th>@Html.DisplayFor(item => teacher.teacherlname)</th>
                    <th>@Html.DisplayFor(item => teacher.employeenumber)</th>
                    <th>@Convert.ToDateTime(teacher.hiredate).ToString("ddd, dd MMM yyyy")</th>
                    <th>@Html.DisplayFor(item => teacher.salary)</th>
                    <th>@Html.ActionLink("Details", "Show", new { id = teacher.teacherid })</th>
                    <th><button class="btn btn-danger" onclick="deleteTeacher('@teacher.teacherid')">Delete</button></th>
                </tr>

            }

        </tbody>
    </table>
</div>

<script type="text/javascript">
    function deleteTeacher(id) {

        Swal.fire({
            title: "Are you sure?",
            text: "Once deleted, you will not be able to see the teacher and it's associated classes!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: 'Yes',
        }).then((result) => {
            if (result.isConfirmed) {
                var http = new XMLHttpRequest();
                http.open('DELETE', "http://localhost:5001/api/TeacherData/" + id, true);
                http.setRequestHeader('Content-type', 'application/json');
                http.onreadystatechange = function () {
                    if (http.readyState == 4) {
                        if (http.status == 200) {
                            window.location.reload();
                        }
                        else {
                            Swal.fire({
                                title: "Oops",
                                text: "Unable to delete teacher",
                                icon: 'error'
                            });
                        }
                    }
                }
                http.send();
            }
        })


    }
</script>
